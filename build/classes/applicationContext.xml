<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
xmlns:aop="http://www.springframework.org/schema/aop"  
xsi:schemaLocation="http://www.springframework.org/schema/beans  
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
http://www.springframework.org/schema/aop  
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">  

    <!-- 定义被代理者 -->  
   <bean id="me" class="saop_01.saop.Me"></bean>  
     
   <!-- 定义通知内容，也就是切入点执行前后需要做的事情 -->  
   <bean id="sleepHelper" class="saop_01.saop.SleepHelper"></bean>  
     
   <!-- 定义切入点位置 -->  
   <bean id="sleepPointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut">  
        <property name="pattern" value=".*sleep"></property>  
   </bean>  
     
   <!-- 使切入点与通知相关联，完成切面配置 -->  
   <bean id="sleepHelperAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">  
        <property name="advice" ref="sleepHelper"></property>         
        <property name="pointcut" ref="sleepPointcut"></property>  
   </bean>  
     
        <!-- 设置代理 -->  
 <!--   <bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">  
                        代理的对象，有睡觉能力  
        <property name="target" ref="me"></property>  
                        使用切面  
        <property name="interceptorNames" value="sleepHelperAdvisor"></property>  
                        代理接口，睡觉接口  
        <property name="proxyInterfaces" value="saop_01.saop.Sleepable"></property>   
   </bean> -->  
   
   <!-- DefaultAdvisorAutoProxyCreator这个类功能更为强大，这个类的奇妙之处是他实现了BeanProcessor接口,当ApplicationContext读如所有的Bean配置信息后，
                       这个类将扫描上下文，寻找所有的Advistor(一个Advisor是一个切入点和一个通知的组成)，将这些Advisor应用到所有符合切入点的Bean中 -->
   <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>  

</beans>